{"ast":null,"code":"var _jsxFileName = \"D:\\\\Premium-Loyalty-Card-UI\\\\premium-loyalty-card-frontend\\\\src\\\\Customer-Screens\\\\CustomerInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../Components/CustomTable';\nimport PaginationRounded from '../Components/TablePagination';\nimport { useNavigate } from 'react-router-dom';\nimport CenteredTabs from '../Components/ThreeTabs';\nimport '../Styles/CustomerInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(data => setData(data.slice(0, 100)));\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Title',\n    accessor: 'title'\n  }], []);\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n  const pageCount = Math.ceil(data.length / itemsPerPage);\n  const displayedData = React.useMemo(() => {\n    const start = (currentPage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    return data.slice(start, end);\n  }, [currentPage, data, itemsPerPage]);\n  const handleRowClick = row => {\n    console.log('Clicked row:', row.original.id);\n    navigate(`/customerInfo/${row.original.id}`);\n  };\n  const [value, setValue] = useState(0);\n  const handleTabChange = newValue => {\n    setValue(newValue);\n  };\n  const tabs = [{\n    label: \"Tab 1\"\n  }, {\n    label: \"Tab 2\"\n  }, {\n    label: \"Tab 3\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs-container\",\n      children: /*#__PURE__*/_jsxDEV(CenteredTabs, {\n        value: value,\n        tabs: tabs,\n        onChange: handleTabChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTable, \"E2vctpyEcrXb5be7fRZyScsu680=\", false, function () {\n  return [useNavigate];\n});\n_c = MyTable;\nexport default MyTable;\nvar _c;\n$RefreshReg$(_c, \"MyTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","PaginationRounded","useNavigate","CenteredTabs","jsxDEV","_jsxDEV","MyTable","_s","data","setData","currentPage","setCurrentPage","itemsPerPage","navigate","fetch","then","response","json","slice","columns","useMemo","Header","accessor","handleChangePage","page","pageCount","Math","ceil","length","displayedData","start","end","handleRowClick","row","console","log","original","id","value","setValue","handleTabChange","newValue","tabs","label","children","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Premium-Loyalty-Card-UI/premium-loyalty-card-frontend/src/Customer-Screens/CustomerInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from '../Components/CustomTable';\r\nimport PaginationRounded from '../Components/TablePagination';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CenteredTabs from '../Components/ThreeTabs';\r\nimport '../Styles/CustomerInfo.css'\r\nconst MyTable = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => setData(data.slice(0, 100)))\r\n  }, []);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n      },\r\n      {\r\n        Header: 'Title',\r\n        accessor: 'title',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const pageCount = Math.ceil(data.length / itemsPerPage);\r\n\r\n  const displayedData = React.useMemo(() => {\r\n    const start = (currentPage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    return data.slice(start, end);\r\n  }, [currentPage, data, itemsPerPage]);\r\n\r\n  const handleRowClick = (row) => {\r\n    console.log('Clicked row:', row.original.id);\r\n    navigate(`/customerInfo/${row.original.id}`);\r\n  };\r\n\r\n  const [value, setValue] = useState(0);\r\n\r\n  const handleTabChange = (newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const tabs = [\r\n    { label: \"Tab 1\" },\r\n    { label: \"Tab 2\" },\r\n    { label: \"Tab 3\" },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      {/* <Table title=\"Posts\" data={displayedData} columns={columns} onRowClick={handleRowClick} /> */}\r\n      <div className=\"tabs-container\">\r\n  <CenteredTabs value={value} tabs={tabs} onChange={handleTabChange} />\r\n     </div>\r\n\r\n      {/* <div className=\"pagination\">\r\n        <PaginationRounded\r\n          currentPage={currentPage}\r\n          totalPages={pageCount}\r\n          onPageChange={handleChangePage}\r\n          pageStyle={{ color: '#F4A26C' }}\r\n          selectedPageStyle={{ color: '#F4A26C', fontWeight: 'bold' }}\r\n        />\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}