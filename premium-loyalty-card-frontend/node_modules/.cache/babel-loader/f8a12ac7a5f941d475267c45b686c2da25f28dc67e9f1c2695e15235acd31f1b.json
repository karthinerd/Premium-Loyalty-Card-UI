{"ast":null,"code":"var _jsxFileName = \"D:\\\\Premium-Loyalty-Card-UI\\\\premium-loyalty-card-frontend\\\\src\\\\Components\\\\CustomTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Paper } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomTable = _ref => {\n  _s();\n  let {\n    title,\n    data,\n    columns,\n    onRowClick\n  } = _ref;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              onClick: () => onRowClick(row),\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: row[column.id]\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 50],\n        component: \"div\",\n        count: data.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n_c = CustomTable;\nexport default CustomTable;\nvar _c;\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Paper","jsxDEV","_jsxDEV","CustomTable","_ref","_s","title","data","columns","onRowClick","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","component","map","column","label","id","slice","row","index","hover","onClick","rowsPerPageOptions","count","length","onChangePage","onChangeRowsPerPage","_c","$RefreshReg$"],"sources":["D:/Premium-Loyalty-Card-UI/premium-loyalty-card-frontend/src/Components/CustomTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Paper } from '@material-ui/core';\r\n\r\nconst CustomTable = ({ title, data, columns, onRowClick }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell key={column.id}>{column.label}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n              return (\r\n                <TableRow key={index} hover onClick={() => onRowClick(row)}>\r\n                  {columns.map(column => (\r\n                    <TableCell key={column.id}>{row[column.id]}</TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50]}\r\n          component=\"div\"\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}