{"ast":null,"code":"var _jsxFileName = \"D:\\\\Premium-Loyalty-Card-UI\\\\premium-loyalty-card-frontend\\\\src\\\\Components\\\\DescriptionField.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Editor } from \"@tinymce/tinymce-react\";\nimport \"../Styles/DescriptionEditor.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DescriptionEditor = _ref => {\n  _s();\n  let {\n    value,\n    onChange\n  } = _ref;\n  const [editorKey, setEditorKey] = useState(1);\n  const MAX_WORDS = 1500;\n  const handleEditorChange = (content, editor) => {\n    const words = content.split(\" \");\n    if (words.length <= MAX_WORDS) {\n      onChange(content);\n    }\n  };\n  const handleReset = () => {\n    setEditorKey(editorKey + 1);\n    onChange(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(Editor, {\n      apiKey: \"<YOUR_API_KEY>\",\n      value: value,\n      onEditorChange: handleEditorChange,\n      init: {\n        height: 500,\n        width: 400,\n        menubar: false,\n        plugins: [\"advlist autolink lists link image charmap print preview anchor\", \"searchreplace visualblocks code fullscreen\", \"insertdatetime media table paste code help wordcount\"],\n        toolbar: \"undo redo | formatselect | bold italic backcolor | \\\r\n            alignleft aligncenter alignright alignjustify | \\\r\n            bullist numlist outdent indent | removeformat | help\"\n      },\n      pl: true\n    }, editorKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"word-count\",\n      children: [MAX_WORDS - value.split(\" \").length, \" words remaining\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-button\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(DescriptionEditor, \"nLIy/cb3YFmEaPN6bmAG4U51OMs=\");\n_c = DescriptionEditor;\nexport default DescriptionEditor;\nvar _c;\n$RefreshReg$(_c, \"DescriptionEditor\");","map":{"version":3,"names":["React","useState","Editor","jsxDEV","_jsxDEV","DescriptionEditor","_ref","_s","value","onChange","editorKey","setEditorKey","MAX_WORDS","handleEditorChange","content","editor","words","split","length","handleReset","className","children","apiKey","onEditorChange","init","height","width","menubar","plugins","toolbar","pl","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Premium-Loyalty-Card-UI/premium-loyalty-card-frontend/src/Components/DescriptionField.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport \"../Styles/DescriptionEditor.css\";\r\n\r\nconst DescriptionEditor = ({ value, onChange }) => {\r\n  const [editorKey, setEditorKey] = useState(1);\r\n  const MAX_WORDS = 1500;\r\n\r\n  const handleEditorChange = (content, editor) => {\r\n    const words = content.split(\" \");\r\n    if (words.length <= MAX_WORDS) {\r\n      onChange(content);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setEditorKey(editorKey + 1);\r\n    onChange(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <Editor\r\n        apiKey=\"<YOUR_API_KEY>\"\r\n        value={value}\r\n        onEditorChange={handleEditorChange}\r\n        init={{\r\n          height: 500,\r\n          width: 400,\r\n          menubar: false,\r\n          plugins: [\r\n            \"advlist autolink lists link image charmap print preview anchor\",\r\n            \"searchreplace visualblocks code fullscreen\",\r\n            \"insertdatetime media table paste code help wordcount\",\r\n          ],\r\n          toolbar:\r\n            \"undo redo | formatselect | bold italic backcolor | \\\r\n            alignleft aligncenter alignright alignjustify | \\\r\n            bullist numlist outdent indent | removeformat | help\",\r\n        }}\r\n        key={editorKey}\r\n        pl\r\n      />\r\n      <div className=\"word-count\">\r\n        {MAX_WORDS - value.split(\" \").length} words remaining\r\n        <button className=\"reset-button\" onClick={handleReset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DescriptionEditor;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,wBAAwB;AAC/C,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,iBAAiB,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAC5C,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAMW,SAAS,GAAG,IAAI;EAEtB,MAAMC,kBAAkB,GAAGA,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC9C,MAAMC,KAAK,GAAGF,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC;IAChC,IAAID,KAAK,CAACE,MAAM,IAAIN,SAAS,EAAE;MAC7BH,QAAQ,CAACK,OAAO,CAAC;IACnB;EACF,CAAC;EAED,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBR,YAAY,CAACD,SAAS,GAAG,CAAC,CAAC;IAC3BD,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACEL,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BjB,OAAA,CAACF,MAAM;MACLoB,MAAM,EAAC,gBAAgB;MACvBd,KAAK,EAAEA,KAAM;MACbe,cAAc,EAAEV,kBAAmB;MACnCW,IAAI,EAAE;QACJC,MAAM,EAAE,GAAG;QACXC,KAAK,EAAE,GAAG;QACVC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE,CACP,gEAAgE,EAChE,4CAA4C,EAC5C,sDAAsD,CACvD;QACDC,OAAO,EACL;AACZ;AACA;MACQ,CAAE;MAEFC,EAAE;IAAA,GADGpB,SAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEd,eACF9B,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAC,QAAA,GACxBT,SAAS,GAAGJ,KAAK,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,kBACrC,eAAAd,OAAA;QAAQgB,SAAS,EAAC,cAAc;QAACe,OAAO,EAAEhB,WAAY;QAAAE,QAAA,EAAC;MAEvD;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAC3B,EAAA,CA/CIF,iBAAiB;AAAA+B,EAAA,GAAjB/B,iBAAiB;AAiDvB,eAAeA,iBAAiB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}