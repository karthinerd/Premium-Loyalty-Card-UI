{"ast":null,"code":"var _jsxFileName = \"D:\\\\Premium-Loyalty-Card-UI\\\\premium-loyalty-card-frontend\\\\src\\\\Components\\\\CustomTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Paper } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaginationTable = _ref => {\n  _s();\n  let {\n    title,\n    data,\n    columns,\n    onRowClick\n  } = _ref;\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"table-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n            ...column.getHeaderProps(),\n            children: column.render('Header')\n          }, column.Header, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: [(rowsPerPage > 0 ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : data).map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            ...row.getRowProps(),\n            onClick: () => onRowClick(row),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(TableCell, {\n                ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, cell.column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 26\n              }, this);\n            })\n          }, row.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this);\n        }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n          style: {\n            height: 53 * emptyRows\n          },\n          children: /*#__PURE__*/_jsxDEV(TableCell, {\n            colSpan: columns.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 20, 30, 40, 50],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(PaginationTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n_c = PaginationTable;\nexport default PaginationTable;\nvar _c;\n$RefreshReg$(_c, \"PaginationTable\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Paper","jsxDEV","_jsxDEV","PaginationTable","_ref","_s","title","data","columns","onRowClick","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","emptyRows","Math","min","length","component","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","column","getHeaderProps","render","Header","slice","row","i","prepareRow","getRowProps","onClick","cells","cell","getCellProps","id","style","height","colSpan","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["D:/Premium-Loyalty-Card-UI/premium-loyalty-card-frontend/src/Components/CustomTable.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Paper } from '@material-ui/core';\r\n\r\nconst PaginationTable = ({ title, data, columns, onRowClick }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <h2 className='table-title'>{title}</h2>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {columns.map(column => (\r\n              <TableCell key={column.Header} {...column.getHeaderProps()}>{column.render('Header')}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {(rowsPerPage > 0\r\n            ? data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            : data\r\n          ).map((row, i) => {\r\n            prepareRow(row);\r\n            return (\r\n              <TableRow key={row.id} {...row.getRowProps()} onClick={() => onRowClick(row)}>\r\n                {row.cells.map(cell => {\r\n                  return <TableCell key={cell.column.id} {...cell.getCellProps()}>{cell.render('Cell')}</TableCell>;\r\n                })}\r\n              </TableRow>\r\n            );\r\n          })}\r\n          {emptyRows > 0 && (\r\n            <TableRow style={{ height: 53 * emptyRows }}>\r\n              <TableCell colSpan={columns.length} />\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 20, 30, 40, 50]}\r\n        component=\"div\"\r\n        count={data.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PaginationTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}