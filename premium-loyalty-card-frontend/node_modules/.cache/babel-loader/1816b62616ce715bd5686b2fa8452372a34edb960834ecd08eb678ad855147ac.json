{"ast":null,"code":"var _jsxFileName = \"D:\\\\Premium-Loyalty-Card-UI\\\\premium-loyalty-card-frontend\\\\src\\\\Customer-Screens\\\\CustomerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from '../Components/CustomTable';\nimport PaginationRounded from '../Components/TablePagination';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage] = useState(10);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(data => setData(data.slice(0, 100)));\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'ID',\n    accessor: 'id'\n  }, {\n    Header: 'Title',\n    accessor: 'title'\n  }, {\n    Header: 'Body',\n    accessor: 'body'\n  }], []);\n  const handleChangePage = page => {\n    setCurrentPage(page);\n  };\n  const pageCount = Math.ceil(data.length / itemsPerPage);\n  const displayedData = React.useMemo(() => {\n    const start = (currentPage - 1) * itemsPerPage;\n    const end = start + itemsPerPage;\n    return data.slice(start, end);\n  }, [currentPage, data, itemsPerPage]);\n  const handleRowClick = row => {\n    const customerId = row.original.id;\n    history.push(`/customers/${customerId}`);\n    console.log('Clicked row:', row.original.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      title: \"Posts\",\n      data: displayedData,\n      columns: columns,\n      onRowClick: handleRowClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: /*#__PURE__*/_jsxDEV(PaginationRounded, {\n        currentPage: currentPage,\n        totalPages: pageCount,\n        onPageChange: handleChangePage,\n        pageStyle: {\n          color: '#F4A26C'\n        },\n        selectedPageStyle: {\n          color: '#F4A26C',\n          fontWeight: 'bold'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTable, \"geO481VjXvTbMjMbihaBoZIFim0=\");\n_c = MyTable;\nexport default MyTable;\nvar _c;\n$RefreshReg$(_c, \"MyTable\");","map":{"version":3,"names":["React","useState","useEffect","Table","PaginationRounded","useHistory","jsxDEV","_jsxDEV","MyTable","_s","data","setData","currentPage","setCurrentPage","itemsPerPage","fetch","then","response","json","slice","columns","useMemo","Header","accessor","handleChangePage","page","pageCount","Math","ceil","length","displayedData","start","end","handleRowClick","row","customerId","original","id","history","push","console","log","children","title","onRowClick","fileName","_jsxFileName","lineNumber","columnNumber","className","totalPages","onPageChange","pageStyle","color","selectedPageStyle","fontWeight","_c","$RefreshReg$"],"sources":["D:/Premium-Loyalty-Card-UI/premium-loyalty-card-frontend/src/Customer-Screens/CustomerList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from '../Components/CustomTable';\r\nimport PaginationRounded from '../Components/TablePagination';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst MyTable = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then(response => response.json())\r\n      .then(data => setData(data.slice(0, 100)))\r\n  }, []);\r\n\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'ID',\r\n        accessor: 'id',\r\n      },\r\n      {\r\n        Header: 'Title',\r\n        accessor: 'title',\r\n      },\r\n      {\r\n        Header: 'Body',\r\n        accessor: 'body',\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  const handleChangePage = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  const pageCount = Math.ceil(data.length / itemsPerPage);\r\n\r\n  const displayedData = React.useMemo(() => {\r\n    const start = (currentPage - 1) * itemsPerPage;\r\n    const end = start + itemsPerPage;\r\n    return data.slice(start, end);\r\n  }, [currentPage, data, itemsPerPage]);\r\n\r\n  const handleRowClick = (row) => {\r\n    const customerId = row.original.id;\r\n   history.push(`/customers/${customerId}`);\r\n    console.log('Clicked row:', row.original.id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table title=\"Posts\" data={displayedData} columns={columns} onRowClick={handleRowClick} />\r\n      <div className=\"pagination\">\r\n        <PaginationRounded\r\n          currentPage={currentPage}\r\n          totalPages={pageCount}\r\n          onPageChange={handleChangePage}\r\n          pageStyle={{ color: '#F4A26C' }}\r\n          selectedPageStyle={{ color: '#F4A26C', fontWeight: 'bold' }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTable;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}